🛒 API E-commerce – Backend
🚀 Funcionalidades Principais
🔐 Autenticação & Autorização
- Login e registro com JWT
- Controle de acesso por roles (Admin/Usuário)
- Alteração de senha e renovação de token
📦 Gerenciamento de Produtos
- CRUD completo
- Upload de múltiplas imagens
- Categorização, produtos em destaque e URLs por slug
🗂️ Categorias Hierárquicas
- CRUD e estrutura pai-filho
🛡️ Segurança
- helmet, rate-limit, CORS, validação e tratamento de erros
💾 Banco de Dados
- PostgreSQL com Sequelize ORM
- Migrações, seeds e relacionamentos entre entidades

🛠️ Stack Tecnológica
| Camada | Ferramentas | 
| Runtime | Node.js | 
| Framework | Express.js | 
| Banco de Dados | PostgreSQL + Sequelize ORM | 
| Uploads | Multer | 
| Segurança | Helmet, Rate Limiting, CORS | 
| Validação | Middleware customizado | 
| Testes | Jest | 



📋 Pré-requisitos
- Node.js (v14 ou superior)
- PostgreSQL
- npm ou yarn

⚙️ Instalação Local
git clone <url-do-repositório>
cd project_back_end-1
npm install


Crie o .env com configurações como:
PORT=3000
NODE_ENV=development
DB_HOST=localhost
DB_PORT=5432
DB_NAME=meubanco
DB_USER=usuario
DB_PASSWORD=senha
JWT_SECRET=minhasecret
JWT_EXPIRES_IN=24h


Inicie o projeto:
npm run dev    # Desenvolvimento
npm start      # Produção



📁 Estrutura de Pastas
src/
├── controllers/
├── database/
├── middleware/
├── models/
├── routes/
└── server.js



📚 Endpoints Principais
🔑 Autenticação
- POST /auth/register – Registro
- POST /auth/login – Login
- GET /auth/profile – Perfil do usuário
- PUT /auth/profile – Atualização de perfil
- POST /auth/change-password – Alteração de senha
📦 Produtos
- GET /products – Lista paginada
- GET /products/featured – Produtos em destaque
- POST /products – Criar (admin)
- PUT /products/:id – Atualizar (admin)
- DELETE /products/:id – Excluir (admin)
🗂️ Categorias
- GET /categories
- POST /categories – Criar (admin)
👥 Usuários (admin)
- GET /users – Todos os usuários
- PUT /users/:id – Atualizar
- DELETE /users/:id – Excluir
🩺 Health Check
GET /health


Resposta:
{
  "status": "OK",
  "timestamp": "2024-01-01T00:00:00.000Z",
  "environment": "development"
}



🧪 Testes
npm test             # Testes unitários
npm run test:watch   # Modo watch
npm run test:coverage # Cobertura



🚀 Deploy (PM2 + NGINX)
npm install -g pm2
pm2 start src/server.js --name "api-ecommerce"
pm2 monit



🤝 Contribuições
- Faça um fork
- Crie uma branch: git checkout -b feature/sua-feature
- Commit: git commit -m 'Nova funcionalidade'
- Push e abra um PR

📜 Licença
Licenciado sob a MIT License
